name: Build, Test, Lint & Scan

on: push 

jobs:
  Lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
    
      - name: Install Dependencies
        run: npm ci          
      - name: Run Lint
        run: npm run lint
  Build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
    
      - name: Install Dependencies
        run: npm ci         
      - name: Build Application
        run: npm run build
         
  Test:
    name: Test
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
    
      - name: Install Dependencies
        run: npm ci 
      - name: Run Unit Tests
        run: npm run test 
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ./coverage
          retention-days: 1

  Scan:
    name: Scan
    needs: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: Download code coverage results
        uses: actions/download-artifact@v4
        with:
            name: code-coverage-report
            path: ./coverage/

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: /home/runner/work/bits-devops-assignment/bits-devops-assignment
          args: >
            -Dsonar.organization=bitstest
            -Dsonar.projectKey=bits-devops-assignment
            -Dsonar.sources=src
            -Dsonar.javascript.lcov.reportPaths=./coverage/Icov.info 
            -Dsonar.verbose=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
  Prepare: 
      name: Prepare Infrastructure
      needs: Build
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      
      - name: Install ZIP
        run: sudo apt install zip 

      - name: Package Lamda
        run: sudo mkdir /lamda | sudo chmod a+rwx /lamda | zip ./lamda/downloadUserInfo.zip downloadUserInfo.py | zip -r ./lamda/uploadUserInfo.zip uploadUserInfo.py
        working-directory: ./aws-script

      - name: Archive Lamda Packages
        uses: actions/upload-artifact@v4
        with:
          name: lamda-zip
          path: ./lamda
          retention-days: 1
  
      - name: Terraform Init
        run: terraform init
        working-directory: ./aws-script
  
      - name: Terraform Validate
        run: terraform validate -no-color
        working-directory: ./aws-script
  Deploy:
      name: Deploy Infrastructure
      needs: Prepare
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Download Lamda ZIP Files 
        uses: actions/download-artifact@v4
        with:
          name: lamda-zip
          path: ./aws-script/
      
      - name: Terraform Init
        run: terraform init
        working-directory: ./aws-script
  
      - name: Terraform Plan
        run: terraform plan -no-color
        working-directory: ./aws-script
        
      - name: Terraform Apply
        run: terraform apply -no-color -auto-approve -input=false
        working-directory: ./aws-script